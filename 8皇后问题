#include<stdio.h>

int num = 0;
int isqueen(int i, int j, int (*q)[8])
{
    int s, t;
    for(s=i,t=0; t<8; t++)
        if(q[s][t]==1 && t!=j)
            return 0;//行
    for(t=j,s=0; s<8; s++)
        if(q[s][t]==1 && s!=i)
            return 0;//列
    for(s=i-1,t=j-1; s>=0&&t>=0; s--,t--)
        if(q[s][t]==1)
            return 0;//左上方
    for(s=i+1,t=j+1; s<8&&t<8;s++,t++)
        if(q[s][t]==1)
            return 0;//右下方
    for(s=i-1,t=j+1; s>=0&&t<8; s--,t++)
        if(q[s][t]==1)
            return 0;//右上方
    for(s=i+1,t=j-1; s<8&&t>=0; s++,t--)
        if(q[s][t]==1)
            return 0;//左下方

    return 1;
}

void Queen(int i, int (*q)[8])
{
    int j,k;
    if(i==8){//递归结束条件
        for(j=0; j<8; j++){//显示解
            for(k=0; k<8; k++)
                printf("%d ", q[j][k]);
            printf("\n");
        }
        printf("\n");
        num++;
        return ;
    }
    for(j=0; j<8; j++){
        if(isqueen(i, j, q)){//判断Q[i][j]是否可以放置皇后
            q[i][j]=1;//放置皇后
            Queen(i+1, q);//递归深度优先搜索解空间树
            q[i][j]=0;//回溯到上一层
        }
    }
}

int main()
{
    int q[8][8];
    int i, j;
    for(i=0; i<8; i++)
        for(j=0; j<8; j++)
            q[i][j] = 0;
    Queen(0, q);
    printf("The counts of the 8 Queens are %d\n", num);
    return 0;
}
